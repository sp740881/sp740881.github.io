{"ast":null,"code":"import _slicedToArray from \"C:/Users/91740/Desktop/Portfolio/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n// src/use-spinner.ts\nimport { useInterval } from \"@chakra-ui/react-use-interval\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nvar CONTINUOUS_CHANGE_INTERVAL = 50;\nvar CONTINUOUS_CHANGE_DELAY = 300;\nfunction useSpinner(increment, decrement) {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isSpinning = _useState2[0],\n    setIsSpinning = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    action = _useState4[0],\n    setAction = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    runOnce = _useState6[0],\n    setRunOnce = _useState6[1];\n  var timeoutRef = useRef(null);\n  var removeTimeout = function removeTimeout() {\n    return clearTimeout(timeoutRef.current);\n  };\n  useInterval(function () {\n    if (action === \"increment\") {\n      increment();\n    }\n    if (action === \"decrement\") {\n      decrement();\n    }\n  }, isSpinning ? CONTINUOUS_CHANGE_INTERVAL : null);\n  var up = useCallback(function () {\n    if (runOnce) {\n      increment();\n    }\n    timeoutRef.current = setTimeout(function () {\n      setRunOnce(false);\n      setIsSpinning(true);\n      setAction(\"increment\");\n    }, CONTINUOUS_CHANGE_DELAY);\n  }, [increment, runOnce]);\n  var down = useCallback(function () {\n    if (runOnce) {\n      decrement();\n    }\n    timeoutRef.current = setTimeout(function () {\n      setRunOnce(false);\n      setIsSpinning(true);\n      setAction(\"decrement\");\n    }, CONTINUOUS_CHANGE_DELAY);\n  }, [decrement, runOnce]);\n  var stop = useCallback(function () {\n    setRunOnce(true);\n    setIsSpinning(false);\n    removeTimeout();\n  }, []);\n  useEffect(function () {\n    return function () {\n      return removeTimeout();\n    };\n  }, []);\n  return {\n    up: up,\n    down: down,\n    stop: stop,\n    isSpinning: isSpinning\n  };\n}\nexport { useSpinner };","map":{"version":3,"names":["useInterval","useCallback","useEffect","useRef","useState","CONTINUOUS_CHANGE_INTERVAL","CONTINUOUS_CHANGE_DELAY","useSpinner","increment","decrement","isSpinning","setIsSpinning","action","setAction","runOnce","setRunOnce","timeoutRef","removeTimeout","clearTimeout","current","up","setTimeout","down","stop"],"sources":["C:/Users/91740/Desktop/Portfolio/portfolio/node_modules/@chakra-ui/number-input/dist/chunk-JCNYS6PS.mjs"],"sourcesContent":["// src/use-spinner.ts\nimport { useInterval } from \"@chakra-ui/react-use-interval\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nvar CONTINUOUS_CHANGE_INTERVAL = 50;\nvar CONTINUOUS_CHANGE_DELAY = 300;\nfunction useSpinner(increment, decrement) {\n  const [isSpinning, setIsSpinning] = useState(false);\n  const [action, setAction] = useState(null);\n  const [runOnce, setRunOnce] = useState(true);\n  const timeoutRef = useRef(null);\n  const removeTimeout = () => clearTimeout(timeoutRef.current);\n  useInterval(\n    () => {\n      if (action === \"increment\") {\n        increment();\n      }\n      if (action === \"decrement\") {\n        decrement();\n      }\n    },\n    isSpinning ? CONTINUOUS_CHANGE_INTERVAL : null\n  );\n  const up = useCallback(() => {\n    if (runOnce) {\n      increment();\n    }\n    timeoutRef.current = setTimeout(() => {\n      setRunOnce(false);\n      setIsSpinning(true);\n      setAction(\"increment\");\n    }, CONTINUOUS_CHANGE_DELAY);\n  }, [increment, runOnce]);\n  const down = useCallback(() => {\n    if (runOnce) {\n      decrement();\n    }\n    timeoutRef.current = setTimeout(() => {\n      setRunOnce(false);\n      setIsSpinning(true);\n      setAction(\"decrement\");\n    }, CONTINUOUS_CHANGE_DELAY);\n  }, [decrement, runOnce]);\n  const stop = useCallback(() => {\n    setRunOnce(true);\n    setIsSpinning(false);\n    removeTimeout();\n  }, []);\n  useEffect(() => {\n    return () => removeTimeout();\n  }, []);\n  return { up, down, stop, isSpinning };\n}\n\nexport {\n  useSpinner\n};\n"],"mappings":";AAAA;AACA,SAASA,WAAW,QAAQ,+BAA+B;AAC3D,SAASC,WAAW,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAChE,IAAIC,0BAA0B,GAAG,EAAE;AACnC,IAAIC,uBAAuB,GAAG,GAAG;AACjC,SAASC,UAAU,CAACC,SAAS,EAAEC,SAAS,EAAE;EACxC,gBAAoCL,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA5CM,UAAU;IAAEC,aAAa;EAChC,iBAA4BP,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAnCQ,MAAM;IAAEC,SAAS;EACxB,iBAA8BT,QAAQ,CAAC,IAAI,CAAC;IAAA;IAArCU,OAAO;IAAEC,UAAU;EAC1B,IAAMC,UAAU,GAAGb,MAAM,CAAC,IAAI,CAAC;EAC/B,IAAMc,aAAa,GAAG,SAAhBA,aAAa;IAAA,OAASC,YAAY,CAACF,UAAU,CAACG,OAAO,CAAC;EAAA;EAC5DnB,WAAW,CACT,YAAM;IACJ,IAAIY,MAAM,KAAK,WAAW,EAAE;MAC1BJ,SAAS,EAAE;IACb;IACA,IAAII,MAAM,KAAK,WAAW,EAAE;MAC1BH,SAAS,EAAE;IACb;EACF,CAAC,EACDC,UAAU,GAAGL,0BAA0B,GAAG,IAAI,CAC/C;EACD,IAAMe,EAAE,GAAGnB,WAAW,CAAC,YAAM;IAC3B,IAAIa,OAAO,EAAE;MACXN,SAAS,EAAE;IACb;IACAQ,UAAU,CAACG,OAAO,GAAGE,UAAU,CAAC,YAAM;MACpCN,UAAU,CAAC,KAAK,CAAC;MACjBJ,aAAa,CAAC,IAAI,CAAC;MACnBE,SAAS,CAAC,WAAW,CAAC;IACxB,CAAC,EAAEP,uBAAuB,CAAC;EAC7B,CAAC,EAAE,CAACE,SAAS,EAAEM,OAAO,CAAC,CAAC;EACxB,IAAMQ,IAAI,GAAGrB,WAAW,CAAC,YAAM;IAC7B,IAAIa,OAAO,EAAE;MACXL,SAAS,EAAE;IACb;IACAO,UAAU,CAACG,OAAO,GAAGE,UAAU,CAAC,YAAM;MACpCN,UAAU,CAAC,KAAK,CAAC;MACjBJ,aAAa,CAAC,IAAI,CAAC;MACnBE,SAAS,CAAC,WAAW,CAAC;IACxB,CAAC,EAAEP,uBAAuB,CAAC;EAC7B,CAAC,EAAE,CAACG,SAAS,EAAEK,OAAO,CAAC,CAAC;EACxB,IAAMS,IAAI,GAAGtB,WAAW,CAAC,YAAM;IAC7Bc,UAAU,CAAC,IAAI,CAAC;IAChBJ,aAAa,CAAC,KAAK,CAAC;IACpBM,aAAa,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EACNf,SAAS,CAAC,YAAM;IACd,OAAO;MAAA,OAAMe,aAAa,EAAE;IAAA;EAC9B,CAAC,EAAE,EAAE,CAAC;EACN,OAAO;IAAEG,EAAE,EAAFA,EAAE;IAAEE,IAAI,EAAJA,IAAI;IAAEC,IAAI,EAAJA,IAAI;IAAEb,UAAU,EAAVA;EAAW,CAAC;AACvC;AAEA,SACEH,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}