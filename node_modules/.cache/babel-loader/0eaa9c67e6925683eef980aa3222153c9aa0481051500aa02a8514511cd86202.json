{"ast":null,"code":"import _defineProperty from \"C:/Users/91740/Desktop/Portfolio/portfolio/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"C:/Users/91740/Desktop/Portfolio/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"C:/Users/91740/Desktop/Portfolio/portfolio/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"C:/Users/91740/Desktop/Portfolio/portfolio/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"startColor\", \"endColor\", \"isLoaded\", \"fadeDuration\", \"speed\", \"className\", \"fitContent\"];\nimport { useIsFirstRender } from \"./chunk-5L3NXCNX.mjs\";\n\n// src/skeleton.tsx\nimport { usePrevious } from \"@chakra-ui/react-use-previous\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, cssVar, forwardRef, keyframes, omitThemingProps, useStyleConfig, useToken } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar StyledSkeleton = chakra(\"div\", {\n  baseStyle: {\n    boxShadow: \"none\",\n    backgroundClip: \"padding-box\",\n    cursor: \"default\",\n    color: \"transparent\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n    \"&::before, &::after, *\": {\n      visibility: \"hidden\"\n    }\n  }\n});\nvar $startColor = cssVar(\"skeleton-start-color\");\nvar $endColor = cssVar(\"skeleton-end-color\");\nvar fade = keyframes({\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n});\nvar bgFade = keyframes({\n  from: {\n    borderColor: $startColor.reference,\n    background: $startColor.reference\n  },\n  to: {\n    borderColor: $endColor.reference,\n    background: $endColor.reference\n  }\n});\nvar Skeleton = forwardRef(function (props, ref) {\n  var skeletonProps = _objectSpread({\n    fadeDuration: 0.4,\n    speed: 0.8\n  }, props);\n  var styles = useStyleConfig(\"Skeleton\", skeletonProps);\n  var isFirstRender = useIsFirstRender();\n  var _omitThemingProps = omitThemingProps(skeletonProps),\n    _omitThemingProps$sta = _omitThemingProps.startColor,\n    startColor = _omitThemingProps$sta === void 0 ? \"\" : _omitThemingProps$sta,\n    _omitThemingProps$end = _omitThemingProps.endColor,\n    endColor = _omitThemingProps$end === void 0 ? \"\" : _omitThemingProps$end,\n    isLoaded = _omitThemingProps.isLoaded,\n    fadeDuration = _omitThemingProps.fadeDuration,\n    speed = _omitThemingProps.speed,\n    className = _omitThemingProps.className,\n    fitContent = _omitThemingProps.fitContent,\n    rest = _objectWithoutProperties(_omitThemingProps, _excluded);\n  var _useToken = useToken(\"colors\", [startColor, endColor]),\n    _useToken2 = _slicedToArray(_useToken, 2),\n    startColorVar = _useToken2[0],\n    endColorVar = _useToken2[1];\n  var wasPreviouslyLoaded = usePrevious(isLoaded);\n  var _className = cx(\"chakra-skeleton\", className);\n  var cssVarStyles = _objectSpread(_objectSpread({}, startColorVar && _defineProperty({}, $startColor.variable, startColorVar)), endColorVar && _defineProperty({}, $endColor.variable, endColorVar));\n  if (isLoaded) {\n    var animation = isFirstRender || wasPreviouslyLoaded ? \"none\" : \"\".concat(fade, \" \").concat(fadeDuration, \"s\");\n    return /* @__PURE__ */jsx(chakra.div, _objectSpread({\n      ref: ref,\n      className: _className,\n      __css: {\n        animation: animation\n      }\n    }, rest));\n  }\n  return /* @__PURE__ */jsx(StyledSkeleton, _objectSpread(_objectSpread({\n    ref: ref,\n    className: _className\n  }, rest), {}, {\n    __css: _objectSpread(_objectSpread(_objectSpread({\n      width: fitContent ? \"fit-content\" : void 0\n    }, styles), cssVarStyles), {}, {\n      _dark: _objectSpread(_objectSpread({}, styles[\"_dark\"]), cssVarStyles),\n      animation: \"\".concat(speed, \"s linear infinite alternate \").concat(bgFade)\n    })\n  }));\n});\nSkeleton.displayName = \"Skeleton\";\nexport { Skeleton };","map":{"version":3,"names":["useIsFirstRender","usePrevious","cx","chakra","cssVar","forwardRef","keyframes","omitThemingProps","useStyleConfig","useToken","jsx","StyledSkeleton","baseStyle","boxShadow","backgroundClip","cursor","color","pointerEvents","userSelect","visibility","$startColor","$endColor","fade","from","opacity","to","bgFade","borderColor","reference","background","Skeleton","props","ref","skeletonProps","fadeDuration","speed","styles","isFirstRender","startColor","endColor","isLoaded","className","fitContent","rest","startColorVar","endColorVar","wasPreviouslyLoaded","_className","cssVarStyles","variable","animation","div","__css","width","_dark","displayName"],"sources":["C:/Users/91740/Desktop/Portfolio/portfolio/node_modules/@chakra-ui/skeleton/dist/chunk-WTFA3K5H.mjs"],"sourcesContent":["import {\n  useIsFirstRender\n} from \"./chunk-5L3NXCNX.mjs\";\n\n// src/skeleton.tsx\nimport { usePrevious } from \"@chakra-ui/react-use-previous\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  chakra,\n  cssVar,\n  forwardRef,\n  keyframes,\n  omitThemingProps,\n  useStyleConfig,\n  useToken\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar StyledSkeleton = chakra(\"div\", {\n  baseStyle: {\n    boxShadow: \"none\",\n    backgroundClip: \"padding-box\",\n    cursor: \"default\",\n    color: \"transparent\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n    \"&::before, &::after, *\": {\n      visibility: \"hidden\"\n    }\n  }\n});\nvar $startColor = cssVar(\"skeleton-start-color\");\nvar $endColor = cssVar(\"skeleton-end-color\");\nvar fade = keyframes({\n  from: { opacity: 0 },\n  to: { opacity: 1 }\n});\nvar bgFade = keyframes({\n  from: {\n    borderColor: $startColor.reference,\n    background: $startColor.reference\n  },\n  to: {\n    borderColor: $endColor.reference,\n    background: $endColor.reference\n  }\n});\nvar Skeleton = forwardRef((props, ref) => {\n  const skeletonProps = {\n    fadeDuration: 0.4,\n    speed: 0.8,\n    ...props\n  };\n  const styles = useStyleConfig(\"Skeleton\", skeletonProps);\n  const isFirstRender = useIsFirstRender();\n  const {\n    startColor = \"\",\n    endColor = \"\",\n    isLoaded,\n    fadeDuration,\n    speed,\n    className,\n    fitContent,\n    ...rest\n  } = omitThemingProps(skeletonProps);\n  const [startColorVar, endColorVar] = useToken(\"colors\", [\n    startColor,\n    endColor\n  ]);\n  const wasPreviouslyLoaded = usePrevious(isLoaded);\n  const _className = cx(\"chakra-skeleton\", className);\n  const cssVarStyles = {\n    ...startColorVar && { [$startColor.variable]: startColorVar },\n    ...endColorVar && { [$endColor.variable]: endColorVar }\n  };\n  if (isLoaded) {\n    const animation = isFirstRender || wasPreviouslyLoaded ? \"none\" : `${fade} ${fadeDuration}s`;\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: _className,\n        __css: { animation },\n        ...rest\n      }\n    );\n  }\n  return /* @__PURE__ */ jsx(\n    StyledSkeleton,\n    {\n      ref,\n      className: _className,\n      ...rest,\n      __css: {\n        width: fitContent ? \"fit-content\" : void 0,\n        ...styles,\n        ...cssVarStyles,\n        _dark: { ...styles[\"_dark\"], ...cssVarStyles },\n        animation: `${speed}s linear infinite alternate ${bgFade}`\n      }\n    }\n  );\n});\nSkeleton.displayName = \"Skeleton\";\n\nexport {\n  Skeleton\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}