{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/91740/Desktop/Portfolio/portfolio/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\n// src/use-attr-observer.ts\nimport { useEffect } from \"react\";\nfunction useAttributeObserver(ref, attributes, fn, enabled) {\n  useEffect(function () {\n    var _a;\n    if (!ref.current || !enabled) return;\n    var win = (_a = ref.current.ownerDocument.defaultView) != null ? _a : window;\n    var attrs = Array.isArray(attributes) ? attributes : [attributes];\n    var obs = new win.MutationObserver(function (changes) {\n      var _iterator = _createForOfIteratorHelper(changes),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var change = _step.value;\n          if (change.type === \"attributes\" && change.attributeName && attrs.includes(change.attributeName)) {\n            fn(change);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    });\n    obs.observe(ref.current, {\n      attributes: true,\n      attributeFilter: attrs\n    });\n    return function () {\n      return obs.disconnect();\n    };\n  });\n}\nexport { useAttributeObserver };","map":{"version":3,"names":["useEffect","useAttributeObserver","ref","attributes","fn","enabled","_a","current","win","ownerDocument","defaultView","window","attrs","Array","isArray","obs","MutationObserver","changes","change","type","attributeName","includes","observe","attributeFilter","disconnect"],"sources":["C:/Users/91740/Desktop/Portfolio/portfolio/node_modules/@chakra-ui/number-input/dist/chunk-XRH675A5.mjs"],"sourcesContent":["// src/use-attr-observer.ts\nimport { useEffect } from \"react\";\nfunction useAttributeObserver(ref, attributes, fn, enabled) {\n  useEffect(() => {\n    var _a;\n    if (!ref.current || !enabled)\n      return;\n    const win = (_a = ref.current.ownerDocument.defaultView) != null ? _a : window;\n    const attrs = Array.isArray(attributes) ? attributes : [attributes];\n    const obs = new win.MutationObserver((changes) => {\n      for (const change of changes) {\n        if (change.type === \"attributes\" && change.attributeName && attrs.includes(change.attributeName)) {\n          fn(change);\n        }\n      }\n    });\n    obs.observe(ref.current, { attributes: true, attributeFilter: attrs });\n    return () => obs.disconnect();\n  });\n}\n\nexport {\n  useAttributeObserver\n};\n"],"mappings":";AAAA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,oBAAoB,CAACC,GAAG,EAAEC,UAAU,EAAEC,EAAE,EAAEC,OAAO,EAAE;EAC1DL,SAAS,CAAC,YAAM;IACd,IAAIM,EAAE;IACN,IAAI,CAACJ,GAAG,CAACK,OAAO,IAAI,CAACF,OAAO,EAC1B;IACF,IAAMG,GAAG,GAAG,CAACF,EAAE,GAAGJ,GAAG,CAACK,OAAO,CAACE,aAAa,CAACC,WAAW,KAAK,IAAI,GAAGJ,EAAE,GAAGK,MAAM;IAC9E,IAAMC,KAAK,GAAGC,KAAK,CAACC,OAAO,CAACX,UAAU,CAAC,GAAGA,UAAU,GAAG,CAACA,UAAU,CAAC;IACnE,IAAMY,GAAG,GAAG,IAAIP,GAAG,CAACQ,gBAAgB,CAAC,UAACC,OAAO,EAAK;MAAA,2CAC3BA,OAAO;QAAA;MAAA;QAA5B,oDAA8B;UAAA,IAAnBC,MAAM;UACf,IAAIA,MAAM,CAACC,IAAI,KAAK,YAAY,IAAID,MAAM,CAACE,aAAa,IAAIR,KAAK,CAACS,QAAQ,CAACH,MAAM,CAACE,aAAa,CAAC,EAAE;YAChGhB,EAAE,CAACc,MAAM,CAAC;UACZ;QACF;MAAC;QAAA;MAAA;QAAA;MAAA;IACH,CAAC,CAAC;IACFH,GAAG,CAACO,OAAO,CAACpB,GAAG,CAACK,OAAO,EAAE;MAAEJ,UAAU,EAAE,IAAI;MAAEoB,eAAe,EAAEX;IAAM,CAAC,CAAC;IACtE,OAAO;MAAA,OAAMG,GAAG,CAACS,UAAU,EAAE;IAAA;EAC/B,CAAC,CAAC;AACJ;AAEA,SACEvB,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}